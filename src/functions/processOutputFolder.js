const findFilesByExtension = require('../functions/findFilesByExtension')
const processEmeraldLinks = require('./processEmeraldLinks')
const populateEmeralds = require('./populateEmeralds')
const processEmeraldScripts = require('./processEmeraldScripts')

async function processOutputFolder(outputFolder, templateFolder) {
  let filesProcessed = 1
  // Deeply recur, and process all files, even files generated by other emerald scripts
  // TODO: add more circular processing protection? No idea how to do this
  while (filesProcessed > 0) {
    filesProcessed = 0
    filesProcessed += await processEmeraldLinks(outputFolder, templateFolder)
    filesProcessed += await populateEmeralds(outputFolder, templateFolder)
    filesProcessed += await processEmeraldScripts(outputFolder, templateFolder)
  }
}

module.exports = processOutputFolder
